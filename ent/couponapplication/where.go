// Code generated by ent, DO NOT EDIT.

package couponapplication

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/flexprice/flexprice/ent/predicate"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContainsFold(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldTenantID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldStatus, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldUpdatedBy, v))
}

// EnvironmentID applies equality check predicate on the "environment_id" field. It's identical to EnvironmentIDEQ.
func EnvironmentID(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldEnvironmentID, v))
}

// CouponID applies equality check predicate on the "coupon_id" field. It's identical to CouponIDEQ.
func CouponID(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldCouponID, v))
}

// CouponAssociationID applies equality check predicate on the "coupon_association_id" field. It's identical to CouponAssociationIDEQ.
func CouponAssociationID(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldCouponAssociationID, v))
}

// InvoiceID applies equality check predicate on the "invoice_id" field. It's identical to InvoiceIDEQ.
func InvoiceID(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldInvoiceID, v))
}

// InvoiceLineItemID applies equality check predicate on the "invoice_line_item_id" field. It's identical to InvoiceLineItemIDEQ.
func InvoiceLineItemID(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldInvoiceLineItemID, v))
}

// AppliedAt applies equality check predicate on the "applied_at" field. It's identical to AppliedAtEQ.
func AppliedAt(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldAppliedAt, v))
}

// OriginalPrice applies equality check predicate on the "original_price" field. It's identical to OriginalPriceEQ.
func OriginalPrice(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldOriginalPrice, v))
}

// FinalPrice applies equality check predicate on the "final_price" field. It's identical to FinalPriceEQ.
func FinalPrice(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldFinalPrice, v))
}

// DiscountedAmount applies equality check predicate on the "discounted_amount" field. It's identical to DiscountedAmountEQ.
func DiscountedAmount(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldDiscountedAmount, v))
}

// DiscountType applies equality check predicate on the "discount_type" field. It's identical to DiscountTypeEQ.
func DiscountType(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldDiscountType, v))
}

// DiscountPercentage applies equality check predicate on the "discount_percentage" field. It's identical to DiscountPercentageEQ.
func DiscountPercentage(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldDiscountPercentage, v))
}

// Currency applies equality check predicate on the "currency" field. It's identical to CurrencyEQ.
func Currency(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldCurrency, v))
}

// SubscriptionID applies equality check predicate on the "subscription_id" field. It's identical to SubscriptionIDEQ.
func SubscriptionID(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldSubscriptionID, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContainsFold(FieldTenantID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContainsFold(FieldStatus, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldUpdatedAt, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// EnvironmentIDEQ applies the EQ predicate on the "environment_id" field.
func EnvironmentIDEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldEnvironmentID, v))
}

// EnvironmentIDNEQ applies the NEQ predicate on the "environment_id" field.
func EnvironmentIDNEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldEnvironmentID, v))
}

// EnvironmentIDIn applies the In predicate on the "environment_id" field.
func EnvironmentIDIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldEnvironmentID, vs...))
}

// EnvironmentIDNotIn applies the NotIn predicate on the "environment_id" field.
func EnvironmentIDNotIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldEnvironmentID, vs...))
}

// EnvironmentIDGT applies the GT predicate on the "environment_id" field.
func EnvironmentIDGT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldEnvironmentID, v))
}

// EnvironmentIDGTE applies the GTE predicate on the "environment_id" field.
func EnvironmentIDGTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldEnvironmentID, v))
}

// EnvironmentIDLT applies the LT predicate on the "environment_id" field.
func EnvironmentIDLT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldEnvironmentID, v))
}

// EnvironmentIDLTE applies the LTE predicate on the "environment_id" field.
func EnvironmentIDLTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldEnvironmentID, v))
}

// EnvironmentIDContains applies the Contains predicate on the "environment_id" field.
func EnvironmentIDContains(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContains(FieldEnvironmentID, v))
}

// EnvironmentIDHasPrefix applies the HasPrefix predicate on the "environment_id" field.
func EnvironmentIDHasPrefix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasPrefix(FieldEnvironmentID, v))
}

// EnvironmentIDHasSuffix applies the HasSuffix predicate on the "environment_id" field.
func EnvironmentIDHasSuffix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasSuffix(FieldEnvironmentID, v))
}

// EnvironmentIDIsNil applies the IsNil predicate on the "environment_id" field.
func EnvironmentIDIsNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIsNull(FieldEnvironmentID))
}

// EnvironmentIDNotNil applies the NotNil predicate on the "environment_id" field.
func EnvironmentIDNotNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotNull(FieldEnvironmentID))
}

// EnvironmentIDEqualFold applies the EqualFold predicate on the "environment_id" field.
func EnvironmentIDEqualFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEqualFold(FieldEnvironmentID, v))
}

// EnvironmentIDContainsFold applies the ContainsFold predicate on the "environment_id" field.
func EnvironmentIDContainsFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContainsFold(FieldEnvironmentID, v))
}

// CouponIDEQ applies the EQ predicate on the "coupon_id" field.
func CouponIDEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldCouponID, v))
}

// CouponIDNEQ applies the NEQ predicate on the "coupon_id" field.
func CouponIDNEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldCouponID, v))
}

// CouponIDIn applies the In predicate on the "coupon_id" field.
func CouponIDIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldCouponID, vs...))
}

// CouponIDNotIn applies the NotIn predicate on the "coupon_id" field.
func CouponIDNotIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldCouponID, vs...))
}

// CouponIDGT applies the GT predicate on the "coupon_id" field.
func CouponIDGT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldCouponID, v))
}

// CouponIDGTE applies the GTE predicate on the "coupon_id" field.
func CouponIDGTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldCouponID, v))
}

// CouponIDLT applies the LT predicate on the "coupon_id" field.
func CouponIDLT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldCouponID, v))
}

// CouponIDLTE applies the LTE predicate on the "coupon_id" field.
func CouponIDLTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldCouponID, v))
}

// CouponIDContains applies the Contains predicate on the "coupon_id" field.
func CouponIDContains(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContains(FieldCouponID, v))
}

// CouponIDHasPrefix applies the HasPrefix predicate on the "coupon_id" field.
func CouponIDHasPrefix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasPrefix(FieldCouponID, v))
}

// CouponIDHasSuffix applies the HasSuffix predicate on the "coupon_id" field.
func CouponIDHasSuffix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasSuffix(FieldCouponID, v))
}

// CouponIDEqualFold applies the EqualFold predicate on the "coupon_id" field.
func CouponIDEqualFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEqualFold(FieldCouponID, v))
}

// CouponIDContainsFold applies the ContainsFold predicate on the "coupon_id" field.
func CouponIDContainsFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContainsFold(FieldCouponID, v))
}

// CouponAssociationIDEQ applies the EQ predicate on the "coupon_association_id" field.
func CouponAssociationIDEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldCouponAssociationID, v))
}

// CouponAssociationIDNEQ applies the NEQ predicate on the "coupon_association_id" field.
func CouponAssociationIDNEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldCouponAssociationID, v))
}

// CouponAssociationIDIn applies the In predicate on the "coupon_association_id" field.
func CouponAssociationIDIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldCouponAssociationID, vs...))
}

// CouponAssociationIDNotIn applies the NotIn predicate on the "coupon_association_id" field.
func CouponAssociationIDNotIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldCouponAssociationID, vs...))
}

// CouponAssociationIDGT applies the GT predicate on the "coupon_association_id" field.
func CouponAssociationIDGT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldCouponAssociationID, v))
}

// CouponAssociationIDGTE applies the GTE predicate on the "coupon_association_id" field.
func CouponAssociationIDGTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldCouponAssociationID, v))
}

// CouponAssociationIDLT applies the LT predicate on the "coupon_association_id" field.
func CouponAssociationIDLT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldCouponAssociationID, v))
}

// CouponAssociationIDLTE applies the LTE predicate on the "coupon_association_id" field.
func CouponAssociationIDLTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldCouponAssociationID, v))
}

// CouponAssociationIDContains applies the Contains predicate on the "coupon_association_id" field.
func CouponAssociationIDContains(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContains(FieldCouponAssociationID, v))
}

// CouponAssociationIDHasPrefix applies the HasPrefix predicate on the "coupon_association_id" field.
func CouponAssociationIDHasPrefix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasPrefix(FieldCouponAssociationID, v))
}

// CouponAssociationIDHasSuffix applies the HasSuffix predicate on the "coupon_association_id" field.
func CouponAssociationIDHasSuffix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasSuffix(FieldCouponAssociationID, v))
}

// CouponAssociationIDIsNil applies the IsNil predicate on the "coupon_association_id" field.
func CouponAssociationIDIsNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIsNull(FieldCouponAssociationID))
}

// CouponAssociationIDNotNil applies the NotNil predicate on the "coupon_association_id" field.
func CouponAssociationIDNotNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotNull(FieldCouponAssociationID))
}

// CouponAssociationIDEqualFold applies the EqualFold predicate on the "coupon_association_id" field.
func CouponAssociationIDEqualFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEqualFold(FieldCouponAssociationID, v))
}

// CouponAssociationIDContainsFold applies the ContainsFold predicate on the "coupon_association_id" field.
func CouponAssociationIDContainsFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContainsFold(FieldCouponAssociationID, v))
}

// InvoiceIDEQ applies the EQ predicate on the "invoice_id" field.
func InvoiceIDEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldInvoiceID, v))
}

// InvoiceIDNEQ applies the NEQ predicate on the "invoice_id" field.
func InvoiceIDNEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldInvoiceID, v))
}

// InvoiceIDIn applies the In predicate on the "invoice_id" field.
func InvoiceIDIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldInvoiceID, vs...))
}

// InvoiceIDNotIn applies the NotIn predicate on the "invoice_id" field.
func InvoiceIDNotIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldInvoiceID, vs...))
}

// InvoiceIDGT applies the GT predicate on the "invoice_id" field.
func InvoiceIDGT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldInvoiceID, v))
}

// InvoiceIDGTE applies the GTE predicate on the "invoice_id" field.
func InvoiceIDGTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldInvoiceID, v))
}

// InvoiceIDLT applies the LT predicate on the "invoice_id" field.
func InvoiceIDLT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldInvoiceID, v))
}

// InvoiceIDLTE applies the LTE predicate on the "invoice_id" field.
func InvoiceIDLTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldInvoiceID, v))
}

// InvoiceIDContains applies the Contains predicate on the "invoice_id" field.
func InvoiceIDContains(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContains(FieldInvoiceID, v))
}

// InvoiceIDHasPrefix applies the HasPrefix predicate on the "invoice_id" field.
func InvoiceIDHasPrefix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasPrefix(FieldInvoiceID, v))
}

// InvoiceIDHasSuffix applies the HasSuffix predicate on the "invoice_id" field.
func InvoiceIDHasSuffix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasSuffix(FieldInvoiceID, v))
}

// InvoiceIDEqualFold applies the EqualFold predicate on the "invoice_id" field.
func InvoiceIDEqualFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEqualFold(FieldInvoiceID, v))
}

// InvoiceIDContainsFold applies the ContainsFold predicate on the "invoice_id" field.
func InvoiceIDContainsFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContainsFold(FieldInvoiceID, v))
}

// InvoiceLineItemIDEQ applies the EQ predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDNEQ applies the NEQ predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDNEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDIn applies the In predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldInvoiceLineItemID, vs...))
}

// InvoiceLineItemIDNotIn applies the NotIn predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDNotIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldInvoiceLineItemID, vs...))
}

// InvoiceLineItemIDGT applies the GT predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDGT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDGTE applies the GTE predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDGTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDLT applies the LT predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDLT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDLTE applies the LTE predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDLTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDContains applies the Contains predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDContains(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContains(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDHasPrefix applies the HasPrefix predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDHasPrefix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasPrefix(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDHasSuffix applies the HasSuffix predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDHasSuffix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasSuffix(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDIsNil applies the IsNil predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDIsNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIsNull(FieldInvoiceLineItemID))
}

// InvoiceLineItemIDNotNil applies the NotNil predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDNotNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotNull(FieldInvoiceLineItemID))
}

// InvoiceLineItemIDEqualFold applies the EqualFold predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDEqualFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEqualFold(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDContainsFold applies the ContainsFold predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDContainsFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContainsFold(FieldInvoiceLineItemID, v))
}

// AppliedAtEQ applies the EQ predicate on the "applied_at" field.
func AppliedAtEQ(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldAppliedAt, v))
}

// AppliedAtNEQ applies the NEQ predicate on the "applied_at" field.
func AppliedAtNEQ(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldAppliedAt, v))
}

// AppliedAtIn applies the In predicate on the "applied_at" field.
func AppliedAtIn(vs ...time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldAppliedAt, vs...))
}

// AppliedAtNotIn applies the NotIn predicate on the "applied_at" field.
func AppliedAtNotIn(vs ...time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldAppliedAt, vs...))
}

// AppliedAtGT applies the GT predicate on the "applied_at" field.
func AppliedAtGT(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldAppliedAt, v))
}

// AppliedAtGTE applies the GTE predicate on the "applied_at" field.
func AppliedAtGTE(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldAppliedAt, v))
}

// AppliedAtLT applies the LT predicate on the "applied_at" field.
func AppliedAtLT(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldAppliedAt, v))
}

// AppliedAtLTE applies the LTE predicate on the "applied_at" field.
func AppliedAtLTE(v time.Time) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldAppliedAt, v))
}

// OriginalPriceEQ applies the EQ predicate on the "original_price" field.
func OriginalPriceEQ(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldOriginalPrice, v))
}

// OriginalPriceNEQ applies the NEQ predicate on the "original_price" field.
func OriginalPriceNEQ(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldOriginalPrice, v))
}

// OriginalPriceIn applies the In predicate on the "original_price" field.
func OriginalPriceIn(vs ...decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldOriginalPrice, vs...))
}

// OriginalPriceNotIn applies the NotIn predicate on the "original_price" field.
func OriginalPriceNotIn(vs ...decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldOriginalPrice, vs...))
}

// OriginalPriceGT applies the GT predicate on the "original_price" field.
func OriginalPriceGT(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldOriginalPrice, v))
}

// OriginalPriceGTE applies the GTE predicate on the "original_price" field.
func OriginalPriceGTE(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldOriginalPrice, v))
}

// OriginalPriceLT applies the LT predicate on the "original_price" field.
func OriginalPriceLT(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldOriginalPrice, v))
}

// OriginalPriceLTE applies the LTE predicate on the "original_price" field.
func OriginalPriceLTE(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldOriginalPrice, v))
}

// FinalPriceEQ applies the EQ predicate on the "final_price" field.
func FinalPriceEQ(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldFinalPrice, v))
}

// FinalPriceNEQ applies the NEQ predicate on the "final_price" field.
func FinalPriceNEQ(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldFinalPrice, v))
}

// FinalPriceIn applies the In predicate on the "final_price" field.
func FinalPriceIn(vs ...decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldFinalPrice, vs...))
}

// FinalPriceNotIn applies the NotIn predicate on the "final_price" field.
func FinalPriceNotIn(vs ...decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldFinalPrice, vs...))
}

// FinalPriceGT applies the GT predicate on the "final_price" field.
func FinalPriceGT(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldFinalPrice, v))
}

// FinalPriceGTE applies the GTE predicate on the "final_price" field.
func FinalPriceGTE(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldFinalPrice, v))
}

// FinalPriceLT applies the LT predicate on the "final_price" field.
func FinalPriceLT(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldFinalPrice, v))
}

// FinalPriceLTE applies the LTE predicate on the "final_price" field.
func FinalPriceLTE(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldFinalPrice, v))
}

// DiscountedAmountEQ applies the EQ predicate on the "discounted_amount" field.
func DiscountedAmountEQ(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldDiscountedAmount, v))
}

// DiscountedAmountNEQ applies the NEQ predicate on the "discounted_amount" field.
func DiscountedAmountNEQ(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldDiscountedAmount, v))
}

// DiscountedAmountIn applies the In predicate on the "discounted_amount" field.
func DiscountedAmountIn(vs ...decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldDiscountedAmount, vs...))
}

// DiscountedAmountNotIn applies the NotIn predicate on the "discounted_amount" field.
func DiscountedAmountNotIn(vs ...decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldDiscountedAmount, vs...))
}

// DiscountedAmountGT applies the GT predicate on the "discounted_amount" field.
func DiscountedAmountGT(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldDiscountedAmount, v))
}

// DiscountedAmountGTE applies the GTE predicate on the "discounted_amount" field.
func DiscountedAmountGTE(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldDiscountedAmount, v))
}

// DiscountedAmountLT applies the LT predicate on the "discounted_amount" field.
func DiscountedAmountLT(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldDiscountedAmount, v))
}

// DiscountedAmountLTE applies the LTE predicate on the "discounted_amount" field.
func DiscountedAmountLTE(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldDiscountedAmount, v))
}

// DiscountTypeEQ applies the EQ predicate on the "discount_type" field.
func DiscountTypeEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldDiscountType, v))
}

// DiscountTypeNEQ applies the NEQ predicate on the "discount_type" field.
func DiscountTypeNEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldDiscountType, v))
}

// DiscountTypeIn applies the In predicate on the "discount_type" field.
func DiscountTypeIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldDiscountType, vs...))
}

// DiscountTypeNotIn applies the NotIn predicate on the "discount_type" field.
func DiscountTypeNotIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldDiscountType, vs...))
}

// DiscountTypeGT applies the GT predicate on the "discount_type" field.
func DiscountTypeGT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldDiscountType, v))
}

// DiscountTypeGTE applies the GTE predicate on the "discount_type" field.
func DiscountTypeGTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldDiscountType, v))
}

// DiscountTypeLT applies the LT predicate on the "discount_type" field.
func DiscountTypeLT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldDiscountType, v))
}

// DiscountTypeLTE applies the LTE predicate on the "discount_type" field.
func DiscountTypeLTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldDiscountType, v))
}

// DiscountTypeContains applies the Contains predicate on the "discount_type" field.
func DiscountTypeContains(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContains(FieldDiscountType, v))
}

// DiscountTypeHasPrefix applies the HasPrefix predicate on the "discount_type" field.
func DiscountTypeHasPrefix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasPrefix(FieldDiscountType, v))
}

// DiscountTypeHasSuffix applies the HasSuffix predicate on the "discount_type" field.
func DiscountTypeHasSuffix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasSuffix(FieldDiscountType, v))
}

// DiscountTypeEqualFold applies the EqualFold predicate on the "discount_type" field.
func DiscountTypeEqualFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEqualFold(FieldDiscountType, v))
}

// DiscountTypeContainsFold applies the ContainsFold predicate on the "discount_type" field.
func DiscountTypeContainsFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContainsFold(FieldDiscountType, v))
}

// DiscountPercentageEQ applies the EQ predicate on the "discount_percentage" field.
func DiscountPercentageEQ(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldDiscountPercentage, v))
}

// DiscountPercentageNEQ applies the NEQ predicate on the "discount_percentage" field.
func DiscountPercentageNEQ(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldDiscountPercentage, v))
}

// DiscountPercentageIn applies the In predicate on the "discount_percentage" field.
func DiscountPercentageIn(vs ...decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldDiscountPercentage, vs...))
}

// DiscountPercentageNotIn applies the NotIn predicate on the "discount_percentage" field.
func DiscountPercentageNotIn(vs ...decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldDiscountPercentage, vs...))
}

// DiscountPercentageGT applies the GT predicate on the "discount_percentage" field.
func DiscountPercentageGT(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldDiscountPercentage, v))
}

// DiscountPercentageGTE applies the GTE predicate on the "discount_percentage" field.
func DiscountPercentageGTE(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldDiscountPercentage, v))
}

// DiscountPercentageLT applies the LT predicate on the "discount_percentage" field.
func DiscountPercentageLT(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldDiscountPercentage, v))
}

// DiscountPercentageLTE applies the LTE predicate on the "discount_percentage" field.
func DiscountPercentageLTE(v decimal.Decimal) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldDiscountPercentage, v))
}

// DiscountPercentageIsNil applies the IsNil predicate on the "discount_percentage" field.
func DiscountPercentageIsNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIsNull(FieldDiscountPercentage))
}

// DiscountPercentageNotNil applies the NotNil predicate on the "discount_percentage" field.
func DiscountPercentageNotNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotNull(FieldDiscountPercentage))
}

// CurrencyEQ applies the EQ predicate on the "currency" field.
func CurrencyEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldCurrency, v))
}

// CurrencyNEQ applies the NEQ predicate on the "currency" field.
func CurrencyNEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldCurrency, v))
}

// CurrencyIn applies the In predicate on the "currency" field.
func CurrencyIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldCurrency, vs...))
}

// CurrencyNotIn applies the NotIn predicate on the "currency" field.
func CurrencyNotIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldCurrency, vs...))
}

// CurrencyGT applies the GT predicate on the "currency" field.
func CurrencyGT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldCurrency, v))
}

// CurrencyGTE applies the GTE predicate on the "currency" field.
func CurrencyGTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldCurrency, v))
}

// CurrencyLT applies the LT predicate on the "currency" field.
func CurrencyLT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldCurrency, v))
}

// CurrencyLTE applies the LTE predicate on the "currency" field.
func CurrencyLTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldCurrency, v))
}

// CurrencyContains applies the Contains predicate on the "currency" field.
func CurrencyContains(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContains(FieldCurrency, v))
}

// CurrencyHasPrefix applies the HasPrefix predicate on the "currency" field.
func CurrencyHasPrefix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasPrefix(FieldCurrency, v))
}

// CurrencyHasSuffix applies the HasSuffix predicate on the "currency" field.
func CurrencyHasSuffix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasSuffix(FieldCurrency, v))
}

// CurrencyIsNil applies the IsNil predicate on the "currency" field.
func CurrencyIsNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIsNull(FieldCurrency))
}

// CurrencyNotNil applies the NotNil predicate on the "currency" field.
func CurrencyNotNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotNull(FieldCurrency))
}

// CurrencyEqualFold applies the EqualFold predicate on the "currency" field.
func CurrencyEqualFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEqualFold(FieldCurrency, v))
}

// CurrencyContainsFold applies the ContainsFold predicate on the "currency" field.
func CurrencyContainsFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContainsFold(FieldCurrency, v))
}

// CouponSnapshotIsNil applies the IsNil predicate on the "coupon_snapshot" field.
func CouponSnapshotIsNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIsNull(FieldCouponSnapshot))
}

// CouponSnapshotNotNil applies the NotNil predicate on the "coupon_snapshot" field.
func CouponSnapshotNotNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotNull(FieldCouponSnapshot))
}

// MetadataIsNil applies the IsNil predicate on the "metadata" field.
func MetadataIsNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIsNull(FieldMetadata))
}

// MetadataNotNil applies the NotNil predicate on the "metadata" field.
func MetadataNotNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotNull(FieldMetadata))
}

// SubscriptionIDEQ applies the EQ predicate on the "subscription_id" field.
func SubscriptionIDEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEQ(FieldSubscriptionID, v))
}

// SubscriptionIDNEQ applies the NEQ predicate on the "subscription_id" field.
func SubscriptionIDNEQ(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNEQ(FieldSubscriptionID, v))
}

// SubscriptionIDIn applies the In predicate on the "subscription_id" field.
func SubscriptionIDIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIn(FieldSubscriptionID, vs...))
}

// SubscriptionIDNotIn applies the NotIn predicate on the "subscription_id" field.
func SubscriptionIDNotIn(vs ...string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotIn(FieldSubscriptionID, vs...))
}

// SubscriptionIDGT applies the GT predicate on the "subscription_id" field.
func SubscriptionIDGT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGT(FieldSubscriptionID, v))
}

// SubscriptionIDGTE applies the GTE predicate on the "subscription_id" field.
func SubscriptionIDGTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldGTE(FieldSubscriptionID, v))
}

// SubscriptionIDLT applies the LT predicate on the "subscription_id" field.
func SubscriptionIDLT(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLT(FieldSubscriptionID, v))
}

// SubscriptionIDLTE applies the LTE predicate on the "subscription_id" field.
func SubscriptionIDLTE(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldLTE(FieldSubscriptionID, v))
}

// SubscriptionIDContains applies the Contains predicate on the "subscription_id" field.
func SubscriptionIDContains(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContains(FieldSubscriptionID, v))
}

// SubscriptionIDHasPrefix applies the HasPrefix predicate on the "subscription_id" field.
func SubscriptionIDHasPrefix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasPrefix(FieldSubscriptionID, v))
}

// SubscriptionIDHasSuffix applies the HasSuffix predicate on the "subscription_id" field.
func SubscriptionIDHasSuffix(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldHasSuffix(FieldSubscriptionID, v))
}

// SubscriptionIDIsNil applies the IsNil predicate on the "subscription_id" field.
func SubscriptionIDIsNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldIsNull(FieldSubscriptionID))
}

// SubscriptionIDNotNil applies the NotNil predicate on the "subscription_id" field.
func SubscriptionIDNotNil() predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldNotNull(FieldSubscriptionID))
}

// SubscriptionIDEqualFold applies the EqualFold predicate on the "subscription_id" field.
func SubscriptionIDEqualFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldEqualFold(FieldSubscriptionID, v))
}

// SubscriptionIDContainsFold applies the ContainsFold predicate on the "subscription_id" field.
func SubscriptionIDContainsFold(v string) predicate.CouponApplication {
	return predicate.CouponApplication(sql.FieldContainsFold(FieldSubscriptionID, v))
}

// HasCoupon applies the HasEdge predicate on the "coupon" edge.
func HasCoupon() predicate.CouponApplication {
	return predicate.CouponApplication(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, CouponTable, CouponColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCouponWith applies the HasEdge predicate on the "coupon" edge with a given conditions (other predicates).
func HasCouponWith(preds ...predicate.Coupon) predicate.CouponApplication {
	return predicate.CouponApplication(func(s *sql.Selector) {
		step := newCouponStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCouponAssociation applies the HasEdge predicate on the "coupon_association" edge.
func HasCouponAssociation() predicate.CouponApplication {
	return predicate.CouponApplication(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, CouponAssociationTable, CouponAssociationPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCouponAssociationWith applies the HasEdge predicate on the "coupon_association" edge with a given conditions (other predicates).
func HasCouponAssociationWith(preds ...predicate.CouponAssociation) predicate.CouponApplication {
	return predicate.CouponApplication(func(s *sql.Selector) {
		step := newCouponAssociationStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasInvoice applies the HasEdge predicate on the "invoice" edge.
func HasInvoice() predicate.CouponApplication {
	return predicate.CouponApplication(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, InvoiceTable, InvoiceColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasInvoiceWith applies the HasEdge predicate on the "invoice" edge with a given conditions (other predicates).
func HasInvoiceWith(preds ...predicate.Invoice) predicate.CouponApplication {
	return predicate.CouponApplication(func(s *sql.Selector) {
		step := newInvoiceStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasInvoiceLineItem applies the HasEdge predicate on the "invoice_line_item" edge.
func HasInvoiceLineItem() predicate.CouponApplication {
	return predicate.CouponApplication(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, InvoiceLineItemTable, InvoiceLineItemColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasInvoiceLineItemWith applies the HasEdge predicate on the "invoice_line_item" edge with a given conditions (other predicates).
func HasInvoiceLineItemWith(preds ...predicate.InvoiceLineItem) predicate.CouponApplication {
	return predicate.CouponApplication(func(s *sql.Selector) {
		step := newInvoiceLineItemStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasSubscription applies the HasEdge predicate on the "subscription" edge.
func HasSubscription() predicate.CouponApplication {
	return predicate.CouponApplication(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, SubscriptionTable, SubscriptionColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSubscriptionWith applies the HasEdge predicate on the "subscription" edge with a given conditions (other predicates).
func HasSubscriptionWith(preds ...predicate.Subscription) predicate.CouponApplication {
	return predicate.CouponApplication(func(s *sql.Selector) {
		step := newSubscriptionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CouponApplication) predicate.CouponApplication {
	return predicate.CouponApplication(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CouponApplication) predicate.CouponApplication {
	return predicate.CouponApplication(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CouponApplication) predicate.CouponApplication {
	return predicate.CouponApplication(sql.NotPredicates(p))
}
