// Code generated by ent, DO NOT EDIT.

package coupon

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/flexprice/flexprice/ent/predicate"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContainsFold(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldTenantID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldStatus, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldUpdatedBy, v))
}

// EnvironmentID applies equality check predicate on the "environment_id" field. It's identical to EnvironmentIDEQ.
func EnvironmentID(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldEnvironmentID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldName, v))
}

// RedeemAfter applies equality check predicate on the "redeem_after" field. It's identical to RedeemAfterEQ.
func RedeemAfter(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldRedeemAfter, v))
}

// RedeemBefore applies equality check predicate on the "redeem_before" field. It's identical to RedeemBeforeEQ.
func RedeemBefore(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldRedeemBefore, v))
}

// MaxRedemptions applies equality check predicate on the "max_redemptions" field. It's identical to MaxRedemptionsEQ.
func MaxRedemptions(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldMaxRedemptions, v))
}

// TotalRedemptions applies equality check predicate on the "total_redemptions" field. It's identical to TotalRedemptionsEQ.
func TotalRedemptions(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldTotalRedemptions, v))
}

// AmountOff applies equality check predicate on the "amount_off" field. It's identical to AmountOffEQ.
func AmountOff(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldAmountOff, v))
}

// PercentageOff applies equality check predicate on the "percentage_off" field. It's identical to PercentageOffEQ.
func PercentageOff(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldPercentageOff, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldType, v))
}

// Cadence applies equality check predicate on the "cadence" field. It's identical to CadenceEQ.
func Cadence(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCadence, v))
}

// DurationInPeriods applies equality check predicate on the "duration_in_periods" field. It's identical to DurationInPeriodsEQ.
func DurationInPeriods(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldDurationInPeriods, v))
}

// Currency applies equality check predicate on the "currency" field. It's identical to CurrencyEQ.
func Currency(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCurrency, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContainsFold(FieldTenantID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContainsFold(FieldStatus, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldUpdatedAt, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// EnvironmentIDEQ applies the EQ predicate on the "environment_id" field.
func EnvironmentIDEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldEnvironmentID, v))
}

// EnvironmentIDNEQ applies the NEQ predicate on the "environment_id" field.
func EnvironmentIDNEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldEnvironmentID, v))
}

// EnvironmentIDIn applies the In predicate on the "environment_id" field.
func EnvironmentIDIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldEnvironmentID, vs...))
}

// EnvironmentIDNotIn applies the NotIn predicate on the "environment_id" field.
func EnvironmentIDNotIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldEnvironmentID, vs...))
}

// EnvironmentIDGT applies the GT predicate on the "environment_id" field.
func EnvironmentIDGT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldEnvironmentID, v))
}

// EnvironmentIDGTE applies the GTE predicate on the "environment_id" field.
func EnvironmentIDGTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldEnvironmentID, v))
}

// EnvironmentIDLT applies the LT predicate on the "environment_id" field.
func EnvironmentIDLT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldEnvironmentID, v))
}

// EnvironmentIDLTE applies the LTE predicate on the "environment_id" field.
func EnvironmentIDLTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldEnvironmentID, v))
}

// EnvironmentIDContains applies the Contains predicate on the "environment_id" field.
func EnvironmentIDContains(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContains(FieldEnvironmentID, v))
}

// EnvironmentIDHasPrefix applies the HasPrefix predicate on the "environment_id" field.
func EnvironmentIDHasPrefix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasPrefix(FieldEnvironmentID, v))
}

// EnvironmentIDHasSuffix applies the HasSuffix predicate on the "environment_id" field.
func EnvironmentIDHasSuffix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasSuffix(FieldEnvironmentID, v))
}

// EnvironmentIDIsNil applies the IsNil predicate on the "environment_id" field.
func EnvironmentIDIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldEnvironmentID))
}

// EnvironmentIDNotNil applies the NotNil predicate on the "environment_id" field.
func EnvironmentIDNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldEnvironmentID))
}

// EnvironmentIDEqualFold applies the EqualFold predicate on the "environment_id" field.
func EnvironmentIDEqualFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEqualFold(FieldEnvironmentID, v))
}

// EnvironmentIDContainsFold applies the ContainsFold predicate on the "environment_id" field.
func EnvironmentIDContainsFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContainsFold(FieldEnvironmentID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContainsFold(FieldName, v))
}

// RedeemAfterEQ applies the EQ predicate on the "redeem_after" field.
func RedeemAfterEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldRedeemAfter, v))
}

// RedeemAfterNEQ applies the NEQ predicate on the "redeem_after" field.
func RedeemAfterNEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldRedeemAfter, v))
}

// RedeemAfterIn applies the In predicate on the "redeem_after" field.
func RedeemAfterIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldRedeemAfter, vs...))
}

// RedeemAfterNotIn applies the NotIn predicate on the "redeem_after" field.
func RedeemAfterNotIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldRedeemAfter, vs...))
}

// RedeemAfterGT applies the GT predicate on the "redeem_after" field.
func RedeemAfterGT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldRedeemAfter, v))
}

// RedeemAfterGTE applies the GTE predicate on the "redeem_after" field.
func RedeemAfterGTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldRedeemAfter, v))
}

// RedeemAfterLT applies the LT predicate on the "redeem_after" field.
func RedeemAfterLT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldRedeemAfter, v))
}

// RedeemAfterLTE applies the LTE predicate on the "redeem_after" field.
func RedeemAfterLTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldRedeemAfter, v))
}

// RedeemAfterIsNil applies the IsNil predicate on the "redeem_after" field.
func RedeemAfterIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldRedeemAfter))
}

// RedeemAfterNotNil applies the NotNil predicate on the "redeem_after" field.
func RedeemAfterNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldRedeemAfter))
}

// RedeemBeforeEQ applies the EQ predicate on the "redeem_before" field.
func RedeemBeforeEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldRedeemBefore, v))
}

// RedeemBeforeNEQ applies the NEQ predicate on the "redeem_before" field.
func RedeemBeforeNEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldRedeemBefore, v))
}

// RedeemBeforeIn applies the In predicate on the "redeem_before" field.
func RedeemBeforeIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldRedeemBefore, vs...))
}

// RedeemBeforeNotIn applies the NotIn predicate on the "redeem_before" field.
func RedeemBeforeNotIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldRedeemBefore, vs...))
}

// RedeemBeforeGT applies the GT predicate on the "redeem_before" field.
func RedeemBeforeGT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldRedeemBefore, v))
}

// RedeemBeforeGTE applies the GTE predicate on the "redeem_before" field.
func RedeemBeforeGTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldRedeemBefore, v))
}

// RedeemBeforeLT applies the LT predicate on the "redeem_before" field.
func RedeemBeforeLT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldRedeemBefore, v))
}

// RedeemBeforeLTE applies the LTE predicate on the "redeem_before" field.
func RedeemBeforeLTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldRedeemBefore, v))
}

// RedeemBeforeIsNil applies the IsNil predicate on the "redeem_before" field.
func RedeemBeforeIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldRedeemBefore))
}

// RedeemBeforeNotNil applies the NotNil predicate on the "redeem_before" field.
func RedeemBeforeNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldRedeemBefore))
}

// MaxRedemptionsEQ applies the EQ predicate on the "max_redemptions" field.
func MaxRedemptionsEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldMaxRedemptions, v))
}

// MaxRedemptionsNEQ applies the NEQ predicate on the "max_redemptions" field.
func MaxRedemptionsNEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldMaxRedemptions, v))
}

// MaxRedemptionsIn applies the In predicate on the "max_redemptions" field.
func MaxRedemptionsIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldMaxRedemptions, vs...))
}

// MaxRedemptionsNotIn applies the NotIn predicate on the "max_redemptions" field.
func MaxRedemptionsNotIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldMaxRedemptions, vs...))
}

// MaxRedemptionsGT applies the GT predicate on the "max_redemptions" field.
func MaxRedemptionsGT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldMaxRedemptions, v))
}

// MaxRedemptionsGTE applies the GTE predicate on the "max_redemptions" field.
func MaxRedemptionsGTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldMaxRedemptions, v))
}

// MaxRedemptionsLT applies the LT predicate on the "max_redemptions" field.
func MaxRedemptionsLT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldMaxRedemptions, v))
}

// MaxRedemptionsLTE applies the LTE predicate on the "max_redemptions" field.
func MaxRedemptionsLTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldMaxRedemptions, v))
}

// MaxRedemptionsIsNil applies the IsNil predicate on the "max_redemptions" field.
func MaxRedemptionsIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldMaxRedemptions))
}

// MaxRedemptionsNotNil applies the NotNil predicate on the "max_redemptions" field.
func MaxRedemptionsNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldMaxRedemptions))
}

// TotalRedemptionsEQ applies the EQ predicate on the "total_redemptions" field.
func TotalRedemptionsEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldTotalRedemptions, v))
}

// TotalRedemptionsNEQ applies the NEQ predicate on the "total_redemptions" field.
func TotalRedemptionsNEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldTotalRedemptions, v))
}

// TotalRedemptionsIn applies the In predicate on the "total_redemptions" field.
func TotalRedemptionsIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldTotalRedemptions, vs...))
}

// TotalRedemptionsNotIn applies the NotIn predicate on the "total_redemptions" field.
func TotalRedemptionsNotIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldTotalRedemptions, vs...))
}

// TotalRedemptionsGT applies the GT predicate on the "total_redemptions" field.
func TotalRedemptionsGT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldTotalRedemptions, v))
}

// TotalRedemptionsGTE applies the GTE predicate on the "total_redemptions" field.
func TotalRedemptionsGTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldTotalRedemptions, v))
}

// TotalRedemptionsLT applies the LT predicate on the "total_redemptions" field.
func TotalRedemptionsLT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldTotalRedemptions, v))
}

// TotalRedemptionsLTE applies the LTE predicate on the "total_redemptions" field.
func TotalRedemptionsLTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldTotalRedemptions, v))
}

// RulesIsNil applies the IsNil predicate on the "rules" field.
func RulesIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldRules))
}

// RulesNotNil applies the NotNil predicate on the "rules" field.
func RulesNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldRules))
}

// AmountOffEQ applies the EQ predicate on the "amount_off" field.
func AmountOffEQ(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldAmountOff, v))
}

// AmountOffNEQ applies the NEQ predicate on the "amount_off" field.
func AmountOffNEQ(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldAmountOff, v))
}

// AmountOffIn applies the In predicate on the "amount_off" field.
func AmountOffIn(vs ...decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldAmountOff, vs...))
}

// AmountOffNotIn applies the NotIn predicate on the "amount_off" field.
func AmountOffNotIn(vs ...decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldAmountOff, vs...))
}

// AmountOffGT applies the GT predicate on the "amount_off" field.
func AmountOffGT(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldAmountOff, v))
}

// AmountOffGTE applies the GTE predicate on the "amount_off" field.
func AmountOffGTE(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldAmountOff, v))
}

// AmountOffLT applies the LT predicate on the "amount_off" field.
func AmountOffLT(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldAmountOff, v))
}

// AmountOffLTE applies the LTE predicate on the "amount_off" field.
func AmountOffLTE(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldAmountOff, v))
}

// AmountOffIsNil applies the IsNil predicate on the "amount_off" field.
func AmountOffIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldAmountOff))
}

// AmountOffNotNil applies the NotNil predicate on the "amount_off" field.
func AmountOffNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldAmountOff))
}

// PercentageOffEQ applies the EQ predicate on the "percentage_off" field.
func PercentageOffEQ(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldPercentageOff, v))
}

// PercentageOffNEQ applies the NEQ predicate on the "percentage_off" field.
func PercentageOffNEQ(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldPercentageOff, v))
}

// PercentageOffIn applies the In predicate on the "percentage_off" field.
func PercentageOffIn(vs ...decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldPercentageOff, vs...))
}

// PercentageOffNotIn applies the NotIn predicate on the "percentage_off" field.
func PercentageOffNotIn(vs ...decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldPercentageOff, vs...))
}

// PercentageOffGT applies the GT predicate on the "percentage_off" field.
func PercentageOffGT(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldPercentageOff, v))
}

// PercentageOffGTE applies the GTE predicate on the "percentage_off" field.
func PercentageOffGTE(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldPercentageOff, v))
}

// PercentageOffLT applies the LT predicate on the "percentage_off" field.
func PercentageOffLT(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldPercentageOff, v))
}

// PercentageOffLTE applies the LTE predicate on the "percentage_off" field.
func PercentageOffLTE(v decimal.Decimal) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldPercentageOff, v))
}

// PercentageOffIsNil applies the IsNil predicate on the "percentage_off" field.
func PercentageOffIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldPercentageOff))
}

// PercentageOffNotNil applies the NotNil predicate on the "percentage_off" field.
func PercentageOffNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldPercentageOff))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasSuffix(FieldType, v))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContainsFold(FieldType, v))
}

// CadenceEQ applies the EQ predicate on the "cadence" field.
func CadenceEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCadence, v))
}

// CadenceNEQ applies the NEQ predicate on the "cadence" field.
func CadenceNEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldCadence, v))
}

// CadenceIn applies the In predicate on the "cadence" field.
func CadenceIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldCadence, vs...))
}

// CadenceNotIn applies the NotIn predicate on the "cadence" field.
func CadenceNotIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldCadence, vs...))
}

// CadenceGT applies the GT predicate on the "cadence" field.
func CadenceGT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldCadence, v))
}

// CadenceGTE applies the GTE predicate on the "cadence" field.
func CadenceGTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldCadence, v))
}

// CadenceLT applies the LT predicate on the "cadence" field.
func CadenceLT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldCadence, v))
}

// CadenceLTE applies the LTE predicate on the "cadence" field.
func CadenceLTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldCadence, v))
}

// CadenceContains applies the Contains predicate on the "cadence" field.
func CadenceContains(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContains(FieldCadence, v))
}

// CadenceHasPrefix applies the HasPrefix predicate on the "cadence" field.
func CadenceHasPrefix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasPrefix(FieldCadence, v))
}

// CadenceHasSuffix applies the HasSuffix predicate on the "cadence" field.
func CadenceHasSuffix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasSuffix(FieldCadence, v))
}

// CadenceEqualFold applies the EqualFold predicate on the "cadence" field.
func CadenceEqualFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEqualFold(FieldCadence, v))
}

// CadenceContainsFold applies the ContainsFold predicate on the "cadence" field.
func CadenceContainsFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContainsFold(FieldCadence, v))
}

// DurationInPeriodsEQ applies the EQ predicate on the "duration_in_periods" field.
func DurationInPeriodsEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldDurationInPeriods, v))
}

// DurationInPeriodsNEQ applies the NEQ predicate on the "duration_in_periods" field.
func DurationInPeriodsNEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldDurationInPeriods, v))
}

// DurationInPeriodsIn applies the In predicate on the "duration_in_periods" field.
func DurationInPeriodsIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldDurationInPeriods, vs...))
}

// DurationInPeriodsNotIn applies the NotIn predicate on the "duration_in_periods" field.
func DurationInPeriodsNotIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldDurationInPeriods, vs...))
}

// DurationInPeriodsGT applies the GT predicate on the "duration_in_periods" field.
func DurationInPeriodsGT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldDurationInPeriods, v))
}

// DurationInPeriodsGTE applies the GTE predicate on the "duration_in_periods" field.
func DurationInPeriodsGTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldDurationInPeriods, v))
}

// DurationInPeriodsLT applies the LT predicate on the "duration_in_periods" field.
func DurationInPeriodsLT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldDurationInPeriods, v))
}

// DurationInPeriodsLTE applies the LTE predicate on the "duration_in_periods" field.
func DurationInPeriodsLTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldDurationInPeriods, v))
}

// DurationInPeriodsIsNil applies the IsNil predicate on the "duration_in_periods" field.
func DurationInPeriodsIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldDurationInPeriods))
}

// DurationInPeriodsNotNil applies the NotNil predicate on the "duration_in_periods" field.
func DurationInPeriodsNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldDurationInPeriods))
}

// CurrencyEQ applies the EQ predicate on the "currency" field.
func CurrencyEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCurrency, v))
}

// CurrencyNEQ applies the NEQ predicate on the "currency" field.
func CurrencyNEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldCurrency, v))
}

// CurrencyIn applies the In predicate on the "currency" field.
func CurrencyIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldCurrency, vs...))
}

// CurrencyNotIn applies the NotIn predicate on the "currency" field.
func CurrencyNotIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldCurrency, vs...))
}

// CurrencyGT applies the GT predicate on the "currency" field.
func CurrencyGT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldCurrency, v))
}

// CurrencyGTE applies the GTE predicate on the "currency" field.
func CurrencyGTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldCurrency, v))
}

// CurrencyLT applies the LT predicate on the "currency" field.
func CurrencyLT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldCurrency, v))
}

// CurrencyLTE applies the LTE predicate on the "currency" field.
func CurrencyLTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldCurrency, v))
}

// CurrencyContains applies the Contains predicate on the "currency" field.
func CurrencyContains(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContains(FieldCurrency, v))
}

// CurrencyHasPrefix applies the HasPrefix predicate on the "currency" field.
func CurrencyHasPrefix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasPrefix(FieldCurrency, v))
}

// CurrencyHasSuffix applies the HasSuffix predicate on the "currency" field.
func CurrencyHasSuffix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasSuffix(FieldCurrency, v))
}

// CurrencyIsNil applies the IsNil predicate on the "currency" field.
func CurrencyIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldCurrency))
}

// CurrencyNotNil applies the NotNil predicate on the "currency" field.
func CurrencyNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldCurrency))
}

// CurrencyEqualFold applies the EqualFold predicate on the "currency" field.
func CurrencyEqualFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEqualFold(FieldCurrency, v))
}

// CurrencyContainsFold applies the ContainsFold predicate on the "currency" field.
func CurrencyContainsFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContainsFold(FieldCurrency, v))
}

// MetadataIsNil applies the IsNil predicate on the "metadata" field.
func MetadataIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldMetadata))
}

// MetadataNotNil applies the NotNil predicate on the "metadata" field.
func MetadataNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldMetadata))
}

// HasCouponAssociations applies the HasEdge predicate on the "coupon_associations" edge.
func HasCouponAssociations() predicate.Coupon {
	return predicate.Coupon(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, CouponAssociationsTable, CouponAssociationsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCouponAssociationsWith applies the HasEdge predicate on the "coupon_associations" edge with a given conditions (other predicates).
func HasCouponAssociationsWith(preds ...predicate.CouponAssociation) predicate.Coupon {
	return predicate.Coupon(func(s *sql.Selector) {
		step := newCouponAssociationsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCouponApplications applies the HasEdge predicate on the "coupon_applications" edge.
func HasCouponApplications() predicate.Coupon {
	return predicate.Coupon(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, CouponApplicationsTable, CouponApplicationsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCouponApplicationsWith applies the HasEdge predicate on the "coupon_applications" edge with a given conditions (other predicates).
func HasCouponApplicationsWith(preds ...predicate.CouponApplication) predicate.Coupon {
	return predicate.Coupon(func(s *sql.Selector) {
		step := newCouponApplicationsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Coupon) predicate.Coupon {
	return predicate.Coupon(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Coupon) predicate.Coupon {
	return predicate.Coupon(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Coupon) predicate.Coupon {
	return predicate.Coupon(sql.NotPredicates(p))
}
